/* 
 * GraphHopper Directions API
 *
 * You use the GraphHopper Directions API to add route planning, navigation and route optimization to your software. 
 * 
 * E.g. the Routing API has turn instructions and elevation data and the Route Optimization API solves your logistic 
 * problems and supports various constraints like time window and capacity restrictions. Also it is possible to get 
 * all distances between all locations with our fast Matrix API.
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using SMEAppHouse.Core.GHClientLib.Model;
using SMEAppHouse.Core.RestSharpClientLib;

namespace SMEAppHouse.Core.GHClientLib.Api.Interfaces
{
    /// <inheritdoc />
    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IVrpApi : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// Solves vehicle routing problems
        /// </summary>
        /// <remarks>
        /// This endpoint for solving vehicle routing problems, i.e. traveling salesman or vehicle routing problems, and returns the solution.
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="key">your API key</param>
        /// <param name="body">Request object that contains the problem to be solved</param>
        /// <returns>JobId</returns>
        JobId PostVrp (string key, Request body);

        /// <summary>
        /// Solves vehicle routing problems
        /// </summary>
        /// <remarks>
        /// This endpoint for solving vehicle routing problems, i.e. traveling salesman or vehicle routing problems, and returns the solution.
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="key">your API key</param>
        /// <param name="body">Request object that contains the problem to be solved</param>
        /// <returns>ApiResponse of JobId</returns>
        ApiResponse<JobId> PostVrpWithHttpInfo (string key, Request body);
        #endregion Synchronous Operations
        #region Asynchronous Operations
        /// <summary>
        /// Solves vehicle routing problems
        /// </summary>
        /// <remarks>
        /// This endpoint for solving vehicle routing problems, i.e. traveling salesman or vehicle routing problems, and returns the solution.
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="key">your API key</param>
        /// <param name="body">Request object that contains the problem to be solved</param>
        /// <returns>Task of JobId</returns>
        System.Threading.Tasks.Task<JobId> PostVrpAsync (string key, Request body);

        /// <summary>
        /// Solves vehicle routing problems
        /// </summary>
        /// <remarks>
        /// This endpoint for solving vehicle routing problems, i.e. traveling salesman or vehicle routing problems, and returns the solution.
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="key">your API key</param>
        /// <param name="body">Request object that contains the problem to be solved</param>
        /// <returns>Task of ApiResponse (JobId)</returns>
        System.Threading.Tasks.Task<ApiResponse<JobId>> PostVrpAsyncWithHttpInfo (string key, Request body);
        #endregion Asynchronous Operations
    }
}
